# -*- coding: utf-8 -*-
"""PolisiTidur_Training Yolo Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kAFOGe_1C17HQPO8XwjrFSghP8cdQFrr

Download and extract data from dataset using roboflow api
"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="CS5LA1rnI9UW9X5BN2op")
project = rf.workspace("sca5a-kelompok-5-zus60").project("deteksi-polisi-tidur")
version = project.version(1)
dataset = version.download("yolov8")

"""Installing the Ultralytics library to train the Yolo model"""

!pip install ultralytics

"""(optional) Give drive access to google colab because sometimes the feature fails because it's still asking for access."""

from google.colab import drive
drive.mount('/content/drive')

"""**important note**
a recent update from yolo ultralytics will need WandDB API to train the model. click the link on the terminal (you will also need to create wandb) and copy the code and paste it in terminal.

**optional notes**
You don't need to prepare the yolov8n yaml and pt you just declare it in the YOLO and it will be automatically downlod the file. Train the yolo model using the pretrained model yolov8n.pt (you can use a better model like yolov8x, but it takes much more time and computation). you can also change the yolo version to another yolo version yolov11n.pt, and yolov11.yaml if you want.


"""

from ultralytics import YOLO

# Load a model
model = YOLO('yolov8n.yaml')  # build a new model from YAML
model = YOLO('yolov8n.pt')  # load a pretrained model (recommended for training)
model = YOLO('yolov8n.yaml').load('yolov8n.pt')  # build from YAML and transfer weights

# Train the model
results = model.train(data='/content/Deteksi-Polisi-Tidur-1/data.yaml', epochs=100, imgsz=640) #change data path to your data.yaml path (you will get data.yaml when you download the dataset from the roboflow)

"""Convert a folder that contain model and the analytic graphics to be downloaded."""

import zipfile
import os

def zip_dir(folder_path, output_path):
    with zipfile.ZipFile(output_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, _, files in os.walk(folder_path):
            for file in files:
                zipf.write(os.path.join(root, file), os.path.relpath(os.path.join(root, file), folder_path))

folder_to_zip = '/content/runs/detect/train'
zip_output_path = '/content/runs/PolisiTidur.zip'

zip_dir(folder_to_zip, zip_output_path)

from google.colab import files

# Mengunggah file video
uploaded = files.upload()

from ultralytics import YOLO

# Muat model YOLOv8
model = YOLO('/content/runs/detect/train/weights/best.pt')

# Jalankan deteksi pada video
results = model.predict(source='PolisiTidur26.mp4', save=True)

# Output video akan disimpan di folder runs/predict/exp